// components/Quiz.js
"use client"; // Marks this component as a Client Component in Next.js
import { useState } from "react"; // Import the useState hook from React

export default function Quiz() {
    // State to track the current question index
    const [currentQuestion, setCurrentQuestion] = useState(0);
    // State to track the user's score
    const [score, setScore] = useState(0);
    // State to determine if the quiz is finished and the score should be shown
    const [showScore, setShowScore] = useState(false);

    // Array of questions, options, and correct answers
    const questions = [
        {
            question: "What is the primary purpose of typography in design?",
            options: [
                "To make text look pretty",
                "To improve readability and communication",
                "To add color to the text",
                "To make the text bold",
            ],
            correctAnswer: "To improve readability and communication",
        },
        {
            question: "Which of the following is a serif font?",
            options: ["Arial", "Helvetica", "Times New Roman", "Comic Sans"],
            correctAnswer: "Times New Roman",
        },
        {
            question: "What is the term for the space between lines of text?",
            options: ["Kerning", "Leading", "Tracking", "Padding"],
            correctAnswer: "Leading",
        },
    ];

    // Function to handle when a user selects an answer
    const handleAnswer = (selectedAnswer) => {
        // Check if the selected answer is correct
        if (selectedAnswer === questions[currentQuestion].correctAnswer) {
            setScore(score + 1); // Increment the score if the answer is correct
        }

        // Move to the next question
        const nextQuestion = currentQuestion + 1;
        if (nextQuestion < questions.length) {
            setCurrentQuestion(nextQuestion); // Update the current question index
        } else {
            setShowScore(true); // Show the score if all questions are answered
        }
    };

    // Function to restart the quiz
    const restartQuiz = () => {
        setCurrentQuestion(0); // Reset to the first question
        setScore(0); // Reset the score
        setShowScore(false); // Hide the score and show the quiz again
    };

    return (
        <div className="max-w-2xl mx-auto p-6 bg-white shadow-md rounded-lg">
            {showScore ? (
                // Display the score and a restart button if the quiz is finished
                <div className="text-center">
                    <h2 className="text-2xl font-bold text-gray-800">
                        Your Score: {score} / {questions.length}
                    </h2>
                    <button
                        onClick={restartQuiz}
                        className="mt-4 px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700"
                    >
                        Restart Quiz
                    </button>
                </div>
            ) : (
                // Display the current question and options if the quiz is ongoing
                <div>
                    <h2 className="text-xl font-bold text-gray-800">
                        Question {currentQuestion + 1} of {questions.length}
                    </h2>
                    <p className="mt-4 text-gray-600">
                        {questions[currentQuestion].question}
                    </p>
                    <div className="mt-6 space-y-4">
                        {/* Map through the options for the current question */}
                        {questions[currentQuestion].options.map((option, index) => (
                            <button
                                key={index} // Unique key for each option
                                onClick={() => handleAnswer(option)} // Handle answer selection
                                className="w-full px-4 py-2 bg-gray-100 text-gray-800 rounded-md hover:bg-gray-200">
                                {option}
                            </button>
                        ))}
                    </div>
                </div>
            )}
        </div>
    );
}